{"version":3,"sources":["images/marta.jpg","components/Home.js","components/Resume.js","components/Projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","react_default","a","createElement","className","Link","to","id","src","marta","alt","class","Resume","Projects","App","HashRouter","Route","path","exact","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mVCsCzBC,SAjCF,WACX,OAGEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QACZH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,IAAIF,UAAU,QAAvB,oBACJH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,IAAIF,UAAU,QAAvB,SACJH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,YAAYF,UAAU,YAA/B,aACJH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,UAAUF,UAAU,QAA7B,aAGRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMG,GAAG,WACtBN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKK,IAAKC,IAAOC,IAAI,YAEvBT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,0OAKJF,EAAAC,EAAAC,cAAA,OAAKI,GAAG,eACRN,EAAAC,EAAAC,cAAA,cACAF,EAAAC,EAAAC,cAAA,KAAGQ,MAAM,gBAAgBJ,GAAG,WAC5BN,EAAAC,EAAAC,cAAA,KAAGQ,MAAM,kBAAkBJ,GAAG,iBClBrBK,SAVA,WAEX,OACIX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,qDACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KAAT,wBCKGO,SAVE,WAEb,OACIZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,qDACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KAAT,wBCaGQ,0LAbX,OACEb,EAAAC,EAAAC,cAACY,EAAA,EAAD,KACEd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWnB,IACjCC,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAOC,KAAK,UAAUC,OAAK,EAACC,UAAWP,IACvCX,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAOC,KAAK,YAAYC,OAAK,EAACC,UAAWN,aAPjCO,cCKEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO1B,EAAAC,EAAAC,cAACyB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.d4bd0a5a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/marta.95000012.jpg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport marta from '../images/marta.jpg';\r\nimport '../css/home.css';\r\n\r\nconst Home = () => {\r\n  return (\r\n\r\n\r\n    <div className=\"head\">\r\n      <nav>\r\n        <ul className=\"menu\">\r\n          <li><Link to=\"/\" className=\"logo\">Marta Bekyarska</Link></li>\r\n          <li><Link to=\"/\" className=\"home\">Home</Link></li>\r\n          <li><Link to=\"/projects\" className=\"projects\">Projects</Link></li>\r\n          <li><Link to=\"/resume\" className=\"home\">Resume</Link></li>\r\n        </ul>\r\n      </nav>\r\n      <div className=\"row\" id=\"content\">\r\n        <div className=\"column1\">\r\n          <img src={marta} alt=\"myself\" />\r\n        </div>\r\n        <div className=\"column2\">\r\n          <h2>Hello!</h2>\r\n          <p>I'm a JavaScript Developer.\r\n            My passion dominates in coding because I like to create beautiful and efficient websites.\r\n            Always keeping it clean and simple with added functionality whether it be in HTML, CSS or JavaScript.</p>\r\n        </div>\r\n      </div>\r\n      <div id=\"background\"></div>\r\n      <footer>\r\n      <i class=\"fab fa-github\" id=\"github\"></i>\r\n      <i class=\"fab fa-linkedin\" id=\"linkedin\"></i>\r\n      </footer>\r\n    </div>\r\n\r\n  );\r\n};\r\nexport default Home;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../css/resume.css';\r\n\r\nconst Resume = () => {\r\n\r\n    return (\r\n        <div className=\"cont\">\r\n            <h1>Oops this page seems not available yet!</h1>\r\n            <Link to=\"/\">Back to Home page</Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Resume;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../css/projects.css';\r\n\r\nconst Projects = () => {\r\n\r\n    return (\r\n        <div className=\"cont\">\r\n            <h1>Oops this page seems not available yet!</h1>\r\n            <Link to=\"/\">Back to Home page</Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Projects;","import React, { Component } from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport Resume from './components/Resume';\nimport Projects from './components/Projects';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <div className=\"App\">\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/resume\" exact component={Resume} />\n          <Route path=\"/projects\" exact component={Projects} />\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}